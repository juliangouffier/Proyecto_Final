/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package nutricionista.vistas;

import com.itextpdf.kernel.colors.ColorConstants;
import com.itextpdf.kernel.geom.PageSize;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.properties.TextAlignment;
import com.itextpdf.layout.properties.UnitValue;
import java.io.File;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import nutricionista.accesoDatos.HistorialData;
import nutricionista.entidades.HistorialDto;

/**
 *
 * @author gouff
 */
public class HistorialDietas extends javax.swing.JFrame {

    /**
     * Creates new form HistorialDietas
     */
    HistorialData historialData = new HistorialData();
    String name;
    int pacienteId;
    public HistorialDietas(String name, int pacienteId) {
        initComponents();
        this.pacienteId = pacienteId;
        this.name = name;
        jLabel1.setText(jLabel1.getText() + name);
        initTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        historialTabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        historialTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(historialTabla);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Historial de Dietas de ");

        jLayeredPane4.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLayeredPane1.setLayer(jLayeredPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane4)
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jButton2.setText("Salir");

        jButton3.setText("Descargar PDF");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLayeredPane5.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane5Layout = new javax.swing.GroupLayout(jLayeredPane5);
        jLayeredPane5.setLayout(jLayeredPane5Layout);
        jLayeredPane5Layout.setHorizontalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addGap(615, 615, 615)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                .addContainerGap())
        );
        jLayeredPane5Layout.setVerticalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane5)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Seleccionar archivo");
            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

            // Mostrar el diálogo del FileChooser
            int resultado = fileChooser.showOpenDialog(null);

            // Si se seleccionó un archivo
            if (resultado == JFileChooser.APPROVE_OPTION) {
                // Obtener el archivo seleccionado
                File archivoSeleccionado = fileChooser.getSelectedFile();
                System.out.println("Archivo seleccionado: " + archivoSeleccionado.getAbsolutePath());

                List<HistorialDto> historialLista = historialData.buscarHistorialPorPaciente(pacienteId);
                generoPdf(archivoSeleccionado.getAbsolutePath(), historialLista, name);
            }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void generoPdf(String path, List<HistorialDto> listaHistorial, String pac) {
        try {
            PdfWriter writer = new PdfWriter(path + "/historial_paciente-" + pac.trim() +".pdf");
            PdfDocument pdfDoc = new PdfDocument(writer);
            Document document = new Document(pdfDoc, PageSize.A4);
            document.setMargins(10, 10, 10, 10);
            document.add(new Paragraph("Historial del Paciente")
                    .setFontSize(14).setBold().setTextAlignment(TextAlignment.CENTER));
            float[] columnWidths = {1, 3, 3, 2, 3, 3, 2, 2, 2, 2, 2};
            Table table = new Table(UnitValue.createPercentArray(columnWidths)).useAllAvailableWidth();

            String[] columnNames = {
                "ID", "Nombre Dieta", "Paciente", "Alcanzó Peso Buscado", 
                "Fecha Inicio", "Fecha Fin", "Peso Inicial", "Peso Final", 
                "Total Calorías Dieta", "Peso Buscado", "Estado"
            };
            for (String columnName : columnNames) {
                table.addHeaderCell(new Cell().add(new Paragraph(columnName))
                        .setBackgroundColor(ColorConstants.LIGHT_GRAY)
                        .setBold().setPadding(5));
            }

            for (HistorialDto historialDto : listaHistorial) {
                table.addCell(new Cell().add(new Paragraph(String.valueOf(historialDto.getId()))).setPadding(5));
                table.addCell(new Cell().add(new Paragraph(historialDto.getNombreDieta())).setPadding(5));
                table.addCell(new Cell().add(new Paragraph(historialDto.getNombrePaciente())).setPadding(5));
                table.addCell(new Cell().add(new Paragraph(historialDto.getAlcanzoPesoBuscado() ? "Sí" : "No")).setPadding(5));
                table.addCell(new Cell().add(new Paragraph(historialDto.getFechaInicio().toString())).setPadding(5));
                table.addCell(new Cell().add(new Paragraph(historialDto.getFechaFin().toString())).setPadding(5));
                table.addCell(new Cell().add(new Paragraph(String.valueOf(historialDto.getPesoInicial()))).setPadding(5));
                table.addCell(new Cell().add(new Paragraph(historialDto.getPesoFinal() != 0.00 ? String.valueOf(historialDto.getPesoFinal()) : "-")).setPadding(5));
                table.addCell(new Cell().add(new Paragraph(String.valueOf(historialDto.getTotalCaloriasDieta()))).setPadding(5));
                table.addCell(new Cell().add(new Paragraph(String.valueOf(historialDto.getPesoBuscado()))).setPadding(5));
                table.addCell(new Cell().add(new Paragraph(historialDto.getEstado())).setPadding(5));
            }

            document.add(table);
            document.close();
            System.out.println("PDF generado exitosamente en: " + path + "/historial_paciente.pdf");
        } catch (Exception ex) {
            System.err.println("Error al generar el PDF: " + ex.getMessage());
        }
    }


    
    public void initTabla(){
        List<HistorialDto> historial = historialData.buscarHistorialPorPaciente(this.pacienteId);
        String[] columnNames = {
            "ID", "Nombre Dieta", "Paciente", "Alcanzó Peso Buscado", 
            "Fecha Inicio", "Fecha Fin", "Peso Inicial", "Peso Final", 
            "Total Calorías Dieta", "Peso Buscado", "Estado"
        };
        DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0); 
        historialTabla.setModel(tableModel);
        for (HistorialDto historialDto : historial) {
            Object[] row = new Object[11];
            row[0] = historialDto.getId();
            row[1] = historialDto.getNombreDieta();
            row[2] = historialDto.getNombrePaciente(); 
            row[3] = historialDto.getAlcanzoPesoBuscado() ? "Sí" : "No"; 
            row[4] = historialDto.getFechaInicio(); 
            row[5] = historialDto.getFechaFin(); 
            row[6] = historialDto.getPesoInicial(); 
            row[7] = historialDto.getPesoFinal() != 0.00 ? historialDto.getPesoFinal() : "-";
            row[8] = historialDto.getTotalCaloriasDieta();
            row[9] = historialDto.getPesoBuscado();
            row[10] = historialDto.getEstado();
            tableModel.addRow(row);
        }
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable historialTabla;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
